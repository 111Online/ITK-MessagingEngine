package OctopusConsortium.DosService;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by Apache CXF 2.6.1
 * 2012-10-29T16:05:43.879Z
 * Generated source version: 2.6.1
 * 
 */
@WebServiceClient(name = "PathWayService", 
                  wsdlLocation = "classpath:schemas/DOS/wsdl/DosWebservices.wsdl",
                  targetNamespace = "https://nww.pathwaysdos.nhs.uk/app/api/webservices") 
public class PathWayService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("https://nww.pathwaysdos.nhs.uk/app/api/webservices", "PathWayService");
    public final static QName PathWayServiceSoap = new QName("https://nww.pathwaysdos.nhs.uk/app/api/webservices", "PathWayServiceSoap");
    public final static QName PathWayServiceSoap12 = new QName("https://nww.pathwaysdos.nhs.uk/app/api/webservices", "PathWayServiceSoap12");
    static {
        URL url = null;
//        try {
//            url = new URL("https://uat.pathwaysdos.nhs.uk/app/api/webservices");
//        } catch (MalformedURLException e) {
//            java.util.logging.Logger.getLogger(PathWayService.class.getName())
//                .log(java.util.logging.Level.INFO, 
//                     "Can not initialize the default wsdl from {0}", "https://uat.pathwaysdos.nhs.uk/app/api/webservices");
//        }
        url = PathWayService.class.getClassLoader().getResource("schemas/DOS/wsdl/DosWebservices.wsdl");
        WSDL_LOCATION = url;
    }

    public PathWayService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PathWayService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PathWayService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns PathWayServiceSoap
     */
    @WebEndpoint(name = "PathWayServiceSoap")
    public PathWayServiceSoap getPathWayServiceSoap() {
        return super.getPort(PathWayServiceSoap, PathWayServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PathWayServiceSoap
     */
    @WebEndpoint(name = "PathWayServiceSoap")
    public PathWayServiceSoap getPathWayServiceSoap(WebServiceFeature... features) {
        return super.getPort(PathWayServiceSoap, PathWayServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns PathWayServiceSoap
     */
    @WebEndpoint(name = "PathWayServiceSoap12")
    public PathWayServiceSoap getPathWayServiceSoap12() {
        return super.getPort(PathWayServiceSoap12, PathWayServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PathWayServiceSoap
     */
    @WebEndpoint(name = "PathWayServiceSoap12")
    public PathWayServiceSoap getPathWayServiceSoap12(WebServiceFeature... features) {
        return super.getPort(PathWayServiceSoap12, PathWayServiceSoap.class, features);
    }

}
