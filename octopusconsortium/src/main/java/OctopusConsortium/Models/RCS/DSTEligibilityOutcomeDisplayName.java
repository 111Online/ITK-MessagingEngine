//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-257 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.10.24 at 03:44:55 PM BST 
//


package OctopusConsortium.Models.RCS;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;


/**
 * <p>Java class for DSTEligibilityOutcome_displayName.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DSTEligibilityOutcome_displayName">
 *   &lt;restriction base="{urn:hl7-org:v3}st">
 *     &lt;enumeration value="Eligible for Continuing Healthcare"/>
 *     &lt;enumeration value="Eligible for Funded Nursing Care"/>
 *     &lt;enumeration value="Eligible to NHS Contribution to Joint Funding"/>
 *     &lt;enumeration value="Not Eligible for Continuing Healthcare, Joint Funding or Funded Nursing Care"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlEnum
public enum DSTEligibilityOutcomeDisplayName {

    @XmlEnumValue("Eligible for Continuing Healthcare")
    ELIGIBLE_FOR_CONTINUING_HEALTHCARE("Eligible for Continuing Healthcare"),
    @XmlEnumValue("Eligible for Funded Nursing Care")
    ELIGIBLE_FOR_FUNDED_NURSING_CARE("Eligible for Funded Nursing Care"),
    @XmlEnumValue("Eligible to NHS Contribution to Joint Funding")
    ELIGIBLE_TO_NHS_CONTRIBUTION_TO_JOINT_FUNDING("Eligible to NHS Contribution to Joint Funding"),
    @XmlEnumValue("Not Eligible for Continuing Healthcare, Joint Funding or Funded Nursing Care")
    NOT_ELIGIBLE_FOR_CONTINUING_HEALTHCARE_JOINT_FUNDING_OR_FUNDED_NURSING_CARE("Not Eligible for Continuing Healthcare, Joint Funding or Funded Nursing Care");
    private final String value;

    DSTEligibilityOutcomeDisplayName(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DSTEligibilityOutcomeDisplayName fromValue(String v) {
        for (DSTEligibilityOutcomeDisplayName c: DSTEligibilityOutcomeDisplayName.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
