//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-257 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.10.24 at 03:44:55 PM BST 
//


package OctopusConsortium.Models.RCS;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;


/**
 * <p>Java class for DSTOutcomeLevelOfNeed_displayName.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DSTOutcomeLevelOfNeed_displayName">
 *   &lt;restriction base="{urn:hl7-org:v3}st">
 *     &lt;enumeration value="Priority Level of Need Identified"/>
 *     &lt;enumeration value="Severe Level of Need Identified"/>
 *     &lt;enumeration value="High Level of Need Identified"/>
 *     &lt;enumeration value="Some Level of Need Identified"/>
 *     &lt;enumeration value="Low Level of Need Identified"/>
 *     &lt;enumeration value="No Needs Identified"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlEnum
public enum DSTOutcomeLevelOfNeedDisplayName {

    @XmlEnumValue("Priority Level of Need Identified")
    PRIORITY_LEVEL_OF_NEED_IDENTIFIED("Priority Level of Need Identified"),
    @XmlEnumValue("Severe Level of Need Identified")
    SEVERE_LEVEL_OF_NEED_IDENTIFIED("Severe Level of Need Identified"),
    @XmlEnumValue("High Level of Need Identified")
    HIGH_LEVEL_OF_NEED_IDENTIFIED("High Level of Need Identified"),
    @XmlEnumValue("Some Level of Need Identified")
    SOME_LEVEL_OF_NEED_IDENTIFIED("Some Level of Need Identified"),
    @XmlEnumValue("Low Level of Need Identified")
    LOW_LEVEL_OF_NEED_IDENTIFIED("Low Level of Need Identified"),
    @XmlEnumValue("No Needs Identified")
    NO_NEEDS_IDENTIFIED("No Needs Identified");
    private final String value;

    DSTOutcomeLevelOfNeedDisplayName(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DSTOutcomeLevelOfNeedDisplayName fromValue(String v) {
        for (DSTOutcomeLevelOfNeedDisplayName c: DSTOutcomeLevelOfNeedDisplayName.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
