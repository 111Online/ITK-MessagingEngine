//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-257 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.10.24 at 11:01:41 AM BST 
//


package OctopusConsortium.Models.RCSGB;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;


/**
 * <p>Java class for SystemFlagType_displayName.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SystemFlagType_displayName">
 *   &lt;restriction base="{urn:hl7-org:v3}st">
 *     &lt;enumeration value="Patient has suffered trauma flag"/>
 *     &lt;enumeration value="Fire risk at incident location flag"/>
 *     &lt;enumeration value="Scene safe flag"/>
 *     &lt;enumeration value="Police in attendance or required at incident location flag"/>
 *     &lt;enumeration value="Patient is trapped flag"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlEnum
public enum SystemFlagTypeDisplayName {

    @XmlEnumValue("Patient has suffered trauma flag")
    PATIENT_HAS_SUFFERED_TRAUMA_FLAG("Patient has suffered trauma flag"),
    @XmlEnumValue("Fire risk at incident location flag")
    FIRE_RISK_AT_INCIDENT_LOCATION_FLAG("Fire risk at incident location flag"),
    @XmlEnumValue("Scene safe flag")
    SCENE_SAFE_FLAG("Scene safe flag"),
    @XmlEnumValue("Police in attendance or required at incident location flag")
    POLICE_IN_ATTENDANCE_OR_REQUIRED_AT_INCIDENT_LOCATION_FLAG("Police in attendance or required at incident location flag"),
    @XmlEnumValue("Patient is trapped flag")
    PATIENT_IS_TRAPPED_FLAG("Patient is trapped flag");
    private final String value;

    SystemFlagTypeDisplayName(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SystemFlagTypeDisplayName fromValue(String v) {
        for (SystemFlagTypeDisplayName c: SystemFlagTypeDisplayName.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
